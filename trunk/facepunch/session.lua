local md5 = require( "md5" )local facepunch = require( "facepunch" )local os = oslocal string = stringlocal setmetatable = setmetatablemodule( "facepunch.session" )--------------------------------------------------------------------------------- session-- Purpose: Class index-------------------------------------------------------------------------------local session = {}--------------------------------------------------------------------------------- __metatable-- Purpose: Class metatable-------------------------------------------------------------------------------__metatable = {	__index = session,	__type = "session"}--------------------------------------------------------------------------------- session.new()-- Purpose: Creates a new session object-- Output: session-------------------------------------------------------------------------------function new( username, password, hash )	local t = {		username = username,		passwordHash = hash or md5.sumhexa( password ),		cookieName = string.gsub( username, "[^%w_]", "" )	}	setmetatable( t, __metatable )	return tend--------------------------------------------------------------------------------- session()-- Purpose: Shortcut to session.new()-- Output: session-------------------------------------------------------------------------------local metatable = {	__call = function( _, ... )		return new( ... )	end}setmetatable( _M, metatable )--------------------------------------------------------------------------------- login()-- Purpose: log the user in-- Output: boolean success-------------------------------------------------------------------------------function session:login()	facepunch.setSession( self )		local securityToken = facepunch.getSecurityToken()	if ( securityToken == "guest" ) then		local postFields = "" ..		-- Method		"do=" .. "login" ..		-- Username		"&vb_login_username=" .. self.username ..		-- Password		"&vb_login_password=" ..		-- Cookieuser		"&cookieuser=" .. "1" ..		-- Securitytoken		"&securitytoken=" .. securityToken ..		-- Md5 Password		"&vb_login_md5password=" .. self.passwordHash ..		"&vb_login_md5password_utf=" .. self.passwordHash				facepunch.http.post( facepunch.baseURL .. facepunch.loginPage .. "?do=login", postFields )	endend--------------------------------------------------------------------------------- logout()-- Purpose: log the user out-- Output: boolean success-------------------------------------------------------------------------------function session:logout()	local logoutHashPattern = [[<a href="login.php%?do=logout&amp;logouthash=(.-)">]]	local fpLogout = facepunch.http.get( facepunch.baseURL .. facepunch.loginPage .. "?do=logout" )	local logoutHash = string.match( fpLogout, logoutHashPattern )		if (logoutHash ~= nil) then		facepunch.http.get( facepunch.baseURL .. facepunch.loginPage .. "?do=logout&logouthash=" .. logoutHash )		os.remove( "cookies/" .. self.cookieName .. ".txt" )		return true	else		return false	endend--------------------------------------------------------------------------------- member:__eq( session )-- Purpose: Compares against another session object-- Output: boolean-------------------------------------------------------------------------------function session:__eq( session )	if not self.username then return false end	return self.username == session.usernameend--------------------------------------------------------------------------------- member:__tostring()-- Purpose: Returns a string representation of a member-- Output: string-------------------------------------------------------------------------------function __metatable:__tostring()	if not self.username then return "invalid session" end	return "member: " .. self.usernameend